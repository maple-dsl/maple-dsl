# suppress inspection "UnusedProperty" for whole file
# inspect the access of the variable
# 1. access from the root object field, it's not necessary to wrap "<var>" in explicitly.
# 2. access from the variable in direct, consider that wrap "<var>" in stern.

fetchV= \
   FETCH PROP ON <tag> <from:{it|"<it>"}; separator=","> \
   YIELD <selection; null="vertex as v"> \
   <if(function)> | YIELD <selection:{it|$-.<it>}; null="$-.v", format="only_column", separator=",">, <function> \
   <endif> \
   <if(order_asc)> | ORDER BY <order_asc:{it|$-.<it>}; separator=","> ASC \
   <endif> \
   <if(order_desc)> | ORDER BY <order_desc:{it|$-.<it>}; separator=","> DESC \
   <endif> \
   <if(limit)> | OFFSET <offset> LIMIT <limit> \
   <endif>

fetchE= \
   FETCH PROP ON <tag> <from:{it|<it.src> -> <it.dst>@<it.rank>}; separator=","> \
   YIELD <selection; null="edge as e"> \
   <if(function)> | YIELD <selection:{it|$-.<it>}; null="$-.e", format="only_column", separator=",">, <function> \
   <endif> \
   <if(order_asc)> | ORDER BY <order_asc:{it|$-.<it>}; separator=","> ASC \
   <endif> \
   <if(order_desc)> | ORDER BY <order_desc:{it|$-.<it>}; separator=","> DESC \
   <endif> \
   <if(limit)> | OFFSET <offset> LIMIT <limit> \
   <endif>

matchV= \
   LOOKUP ON <tag> \
   WHERE <where; null="1==1"> \
   <if(traverse)> YIELD id(vertex) as dst \
   <else> YIELD <selection; null="vertex as v"> <if(function)> | YIELD <selection:{it|$-.<it>}; null="$-.v", format="only_column", separator=",">, <function><endif> \
   <endif> \
   <if(order_asc)> | ORDER BY <order_asc:{it|$-.<it>}; separator=","> ASC \
   <endif> \
   <if(order_desc)> | ORDER BY <order_desc:{it|$-.<it>}; separator=","> DESC \
   <endif> \
   <if(limit)> | OFFSET <offset> LIMIT <limit> \
   <endif> \
   <if(delete)> | DELETE v <elseif(delete_with_edge)> DELETE v WITH EDGE \
   <endif>

matchE= \
   LOOKUP ON <tag> \
   WHERE <where; null="1==1"> \
   YIELD <selection; null="edge as e"> \
   <if(function)> | YIELD <selection:{it|$-.<it>}; null="$-.e", format="only_column", separator=",">, <function> \
   <endif> \
   <if(order_asc)> | ORDER BY <order_asc:{it|$-.<it>}; separator=","> ASC \
   <endif> \
   <if(order_desc)> | ORDER BY <order_desc:{it|$-.<it>}; separator=","> DESC \
   <endif> \
   <if(limit)> | OFFSET <offset> LIMIT <limit> \
   <endif> \
   <if(delete)> | DELETE e \
   <endif>

#  use `go` will find the dangling edges, must append filter statement to fix it.
traversal= \
   <if(from)> GO <step_m> TO <step_n> STEPS FROM <from:{it|"<it>"}; separator=","> \
   <elseif(from_match)> | GO <step_m> TO <step_n> STEPS FROM $-.dst \
   <elseif(from_prev)> | GO <step_m> TO <step_n> STEPS FROM $-.<from_prev> \
   <endif> \
   OVER <over; null="*", separator=","> \
   <if(direction_in)>REVERSELY<elseif(direction_both)>BIDIRECT<endif> \
   WHERE <where; null="1==1 AND id($$) IS NOT NULL", separator=" AND "> \
   YIELD <selection; separator=","><if(companion)>,<companion:{it|$-.<it>}; separator=","><endif> \
   <if(function)> | YIELD <selection:{it|$-.<it>}; format="only_column", separator=",">, <function> \
   <endif> \
   <if(order_asc)> | ORDER BY <order_asc:{it|$-.<it>}; separator=","> ASC \
   <elseif(order_desc)> | ORDER BY <order_desc:{it|$-.<it>}; separator=","> DESC \
   <endif> \
   <if(limit)> | OFFSET <offset> LIMIT <limit> \
   <endif> \
   <if(delete_vertex)> | DELETE <out> \
   <elseif(detach_vertex)> | DELETE <out> WITH EDGE \
   <elseif(delete_edge)> | DELETE <edge> \
   <endif>