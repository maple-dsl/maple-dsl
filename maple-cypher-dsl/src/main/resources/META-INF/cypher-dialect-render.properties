# suppress inspection "UnusedProperty" for whole file
# inspect the access of the variable
# 1. access from the root object field, it's not necessary to wrap "<var>" in explicitly.
# 2. access from the variable in direct, consider that wrap "<var>" in stern.

fetchV= \
   MATCH (<ref>:<tag>) \
   WHERE <if(where)> <where> AND <endif> \
   id(<ref>) IN [<from:{it|"<it>"}; separator=",">] \
   RETURN <selection> \
   <if(function)>, <function> <endif> \
   <if(order_asc||order_desc)> ORDER BY \
   <elseif(order_asc)> <order_asc:{it|<it> ASC}; separator=","> \
   <elseif(order_desc)> <order_desc:{it|<it> DESC}; separator=","> \
   <endif> \
   <if(limit)> OFFSET <offset> LIMIT <limit> <endif>

fetchE= \
   MATCH () - [<ref>:<tag>] - () \
   WHERE <if(where)> <where> AND <endif> \
   id(<ref>) IN [<from:{it|"<it>"}; separator=",">] \
   RETURN <selection> <if(function)>, <function> <endif> \
   <if(order_asc||order_desc)> ORDER BY \
   <elseif(order_asc)> <order_asc:{it|<it> ASC}; separator=","> \
   <elseif(order_desc)> <order_desc:{it|<it> DESC}; separator=","> \
   <endif> \
   <if(limit)> OFFSET <offset> LIMIT <limit> <endif>

matchV= \
   MATCH (<ref>:<tag>) \
   <if(where)> WHERE <where> <endif> \
   <if(!traverse)> RETURN <selection> <if(function)>, <function> <endif> <endif> \
   <if(order_asc||order_desc)> ORDER BY \
   <elseif(order_asc)> <order_asc:{it|<it> ASC}; separator=","> \
   <elseif(order_desc)> <order_desc:{it|<it> DESC}; separator=","> \
   <endif> \
   <if(limit)> OFFSET <offset> LIMIT <limit> <endif> \
   <if(delete)> DELETE <ref> \
   <elseif(delete_with_edge)> DETACH DELETE <ref> \
   <endif>

matchE= \
   MATCH () - [<ref>:<tag>] - () \
   <if(where)> WHERE <where> <endif> \
   RETURN <selection> \
   <if(function)>, <function> <endif> \
   <if(order_asc||order_desc)> ORDER BY \
   <elseif(order_asc)> <order_asc:{it|<it> ASC}; separator=","> \
   <elseif(order_desc)> <order_desc:{it|<it> DESC}; separator=","> \
   <endif> \
   <if(limit)> OFFSET <offset> LIMIT <limit> <endif> \
   <if(delete)> DELETE <ref> <endif>

# in;   default="src"
# out;  default="dst"
# edge; default="e"
traversal= \
   <if(from_match)> WITH <from_match> as <in> <endif> \
   <if(direction_in)> \
   MATCH (<in>) <- [<edge><if(over)>:<over; separator="|"><endif>*<step_m>..<step_n>] - (<out>) \
   <elseif(direction_out)> \
   MATCH (<in>) - [<edge><if(over)>:<over; separator="|"><endif>*<step_m>..<step_n>] -> (<out>) \
   <elseif(direction_both)> \
   MATCH (<in>) - [<edge><if(over)>:<over; separator="|"><endif>*<step_m>..<step_n>] - (<out>) \
   <endif> \
   <if(where)> WHERE <where; separator=","> <if(from)> AND id() IN [<from:{it|"<it>"}; separator=",">] <endif> \
   <endif> \
   <if(has_next)> WITH \
   <if(companion)>, <companion; separator=",">, <endif> \
   <out> as <next>, <selection; separator=","> \
   <else> RETURN \
   <if(companion)>, <companion; separator=",">, <endif> \
   <selection; separator=","> \
   <endif> \
   <if(function)>, <function> <endif> \
   <if(order_asc||order_desc)> ORDER BY \
   <elseif(order_asc)> <order_asc:{it|<it> ASC}; separator=","> \
   <elseif(order_desc)> <order_desc:{it|<it> DESC}; separator=","> \
   <endif> \
   <if(limit)> OFFSET <offset> LIMIT <limit> <endif>